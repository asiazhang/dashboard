// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:dashboard.sqlite"
}

model User {
  id        Int               @id @default(autoincrement())
  nameEn    String            @unique
  name      String
  email     String
  TestImage TestImage[]
  TestTask  TestTask[]
  projects  ProjectsOnUsers[]
}

model Project {
  id        Int               @id @default(autoincrement())
  name      String
  userId    Int?
  createdAt DateTime          @default(now())
  updatedAt DateTime          @updatedAt
  TestImage TestImage[]
  TestTask  TestTask[]
  users     ProjectsOnUsers[]
}

model ProjectsOnUsers {
  projectId Int
  userId    Int

  project Project @relation(fields: [projectId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())

  @@id([projectId, userId])
}

model TestImage {
  id        Int      @id @default(autoincrement())
  name      String
  toolName  String
  count     Int
  userId    Int
  projectId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User    @relation(fields: [userId], references: [id])
  project Project @relation(fields: [projectId], references: [id])

  @@unique([name, toolName])
}

model TestTask {
  id        Int      @id @default(autoincrement())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
}
